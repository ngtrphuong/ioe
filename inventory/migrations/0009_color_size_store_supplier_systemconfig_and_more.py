# Generated by Django 5.2 on 2025-04-24 12:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0008_rename_notes_sale_remark_remove_member_notes_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Color Name')),
                ('code', models.CharField(blank=True, max_length=20, verbose_name='Color Code')),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Size Name')),
            ],
            options={
                'verbose_name': 'Size',
                'verbose_name_plural': 'Sizes',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Store Name')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Address')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Store',
                'verbose_name_plural': 'Stores',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Supplier Name')),
                ('contact_person', models.CharField(blank=True, max_length=50, verbose_name='Contact Person')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('remarks', models.TextField(blank=True, verbose_name='Remarks')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
            },
        ),
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(default='My Store', max_length=100, verbose_name='Company Name')),
                ('company_address', models.TextField(blank=True, null=True, verbose_name='Company Address')),
                ('company_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone')),
                ('company_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('company_website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('company_logo', models.ImageField(blank=True, null=True, upload_to='logos/', verbose_name='Company Logo')),
                ('barcode_width', models.IntegerField(default=300, verbose_name='Barcode Width')),
                ('barcode_height', models.IntegerField(default=100, verbose_name='Barcode Height')),
                ('barcode_font_size', models.IntegerField(default=12, verbose_name='Barcode Font Size')),
                ('barcode_show_price', models.BooleanField(default=True, verbose_name='Show Price')),
                ('barcode_show_name', models.BooleanField(default=True, verbose_name='Show Product Name')),
                ('barcode_show_company', models.BooleanField(default=True, verbose_name='Show Company Name')),
                ('receipt_header', models.TextField(blank=True, null=True, verbose_name='Receipt Header')),
                ('receipt_footer', models.TextField(blank=True, null=True, verbose_name='Receipt Footer')),
                ('enable_low_stock_alert', models.BooleanField(default=True, verbose_name='Enable Low Stock Alert')),
                ('default_tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Default Tax Rate')),
                ('currency_symbol', models.CharField(default='Â¥', max_length=10, verbose_name='Currency Symbol')),
                ('timezone', models.CharField(default='Asia/Shanghai', max_length=50, verbose_name='Timezone')),
            ],
            options={
                'verbose_name': 'System Configuration',
                'verbose_name_plural': 'System Configurations',
            },
        ),
        migrations.AlterModelOptions(
            name='inventory',
            options={'permissions': (('can_view_item', 'Can view items'), ('can_add_item', 'Can add items'), ('can_change_item', 'Can change items'), ('can_delete_item', 'Can delete items'), ('can_export_item', 'Can export items'), ('can_import_item', 'Can import items'), ('can_allocate_item', 'Can allocate items'), ('can_checkin_item', 'Can check in items'), ('can_checkout_item', 'Can check out items'), ('can_adjust_item', 'Can adjust item inventory'), ('can_return_item', 'Can return items'), ('can_move_item', 'Can move items'), ('can_manage_backup', 'Can manage backups')), 'verbose_name': 'Inventory', 'verbose_name_plural': 'Inventory'},
        ),
        migrations.AlterModelOptions(
            name='memberlevel',
            options={'ordering': ['priority', 'points_threshold'], 'verbose_name': 'Member Level', 'verbose_name_plural': 'Member Levels'},
        ),
        migrations.AddField(
            model_name='category',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Active'),
        ),
        migrations.AddField(
            model_name='member',
            name='address',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Address'),
        ),
        migrations.AddField(
            model_name='member',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_members', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='member',
            name='email',
            field=models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email'),
        ),
        migrations.AddField(
            model_name='member',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Active'),
        ),
        migrations.AddField(
            model_name='member',
            name='member_id',
            field=models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Member ID'),
        ),
        migrations.AddField(
            model_name='member',
            name='notes',
            field=models.TextField(blank=True, null=True, verbose_name='Notes'),
        ),
        migrations.AddField(
            model_name='member',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_members', to=settings.AUTH_USER_MODEL, verbose_name='Updated By'),
        ),
        migrations.AddField(
            model_name='memberlevel',
            name='color',
            field=models.CharField(default='blue', max_length=50, verbose_name='Color Label'),
        ),
        migrations.AddField(
            model_name='memberlevel',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Active'),
        ),
        migrations.AddField(
            model_name='memberlevel',
            name='is_default',
            field=models.BooleanField(default=False, verbose_name='Default Level'),
        ),
        migrations.AddField(
            model_name='memberlevel',
            name='priority',
            field=models.IntegerField(default=0, verbose_name='Priority'),
        ),
        migrations.CreateModel(
            name='MemberTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('PURCHASE', 'Purchase'), ('REFUND', 'Refund'), ('RECHARGE', 'Recharge'), ('POINTS_EARN', 'Points Earn'), ('POINTS_REDEEM', 'Points Redeem'), ('POINTS_ADJUST', 'Points Adjust'), ('BALANCE_ADJUST', 'Balance Adjust'), ('LEVEL_UPGRADE', 'Level Upgrade'), ('LEVEL_DOWNGRADE', 'Level Downgrade'), ('OTHER', 'Other')], max_length=20, verbose_name='Transaction Type')),
                ('points_change', models.IntegerField(default=0, verbose_name='Points Change')),
                ('balance_change', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Balance Change')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Related Object ID')),
                ('related_object_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Related Object Type')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='member_transactions', to=settings.AUTH_USER_MODEL, verbose_name='Operator')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='inventory.member', verbose_name='Member')),
            ],
            options={
                'verbose_name': 'Member Transaction',
                'verbose_name_plural': 'Member Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/', verbose_name='Image')),
                ('thumbnail', models.CharField(blank=True, max_length=255, null=True, verbose_name='Thumbnail Path')),
                ('alt_text', models.CharField(blank=True, max_length=255, verbose_name='Alt Text')),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Primary Image')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='inventory.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='StockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('low_stock', 'Low Stock'), ('expiring', 'Expiring'), ('overstock', 'Overstock')], max_length=20, verbose_name='Alert Type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Resolved At')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Stock Alert',
                'verbose_name_plural': 'Stock Alerts',
            },
        ),
        migrations.CreateModel(
            name='ProductBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=100, verbose_name='Batch Number')),
                ('production_date', models.DateField(blank=True, null=True, verbose_name='Production Date')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('quantity', models.IntegerField(default=0, verbose_name='Quantity')),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cost Price')),
                ('remarks', models.TextField(blank=True, verbose_name='Remarks')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_batches', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='inventory.product', verbose_name='Product')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.supplier', verbose_name='Supplier')),
            ],
            options={
                'verbose_name': 'Product Batch',
                'verbose_name_plural': 'Product Batches',
                'ordering': ['-created_at'],
                'unique_together': {('product', 'batch_number')},
            },
        ),
    ]
